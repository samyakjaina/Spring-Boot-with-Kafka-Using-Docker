version: "3.7"
services:
  zookeeper:
    image: zookeeper
    container_name: my-zookeeper
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_SERVER_ID= 1
      - ZOOKEEPER_CLIENT_PORT= 2181
      - ZOOKEEPER_TICK_TIME= 2000
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalog
  my-kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9093:9094
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9094,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9094,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_CONSUMER_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  api_service:
    build: .
    restart: always
    ports:
      - 9082:8080  
    depends_on:
      - mysqldb
    
    volumes:
      - .m2:/root/.m2
      - D:/db:/home
      
  mysqldb:
    image: "mysql:5.7"
    restart: always
    ports:
      - 3309:3306
    depends_on:
      - my-kafka  
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .db:/var/lib/mysql
      
  manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
    depends_on:
      - zookeeper
     